services:

  cowrie:
    image: cowrie/cowrie
    container_name: cowrie_1
    restart: unless-stopped
    ports:
      - "22:2222"     #simulate ssh service
      - "2223:2223"     #simulate telnet service
    volumes:
       - cowrie-var:/cowrie/cowrie-git/var
    #volume mounted for storing data
    
    networks:
      - honeynet


  elasticsearch:
    container_name: elasticsearch_1
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    environment:
      - discovery.type=single-node        #cluster mode = single for testing and development purposes 
      - xpack.security.enabled=false      #security features turned off for testing
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

    networks:
     - honeynet

  logstash:
    container_name: logstash_1
    image: docker.elastic.co/logstash/logstash:8.11.3
    depends_on:
      - elasticsearch 
    command: /bin/bash -c "sleep 20 && /usr/share/logstash/bin/logstash"  #service will run only if elasticsearch is up and running
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf     #mount the conf file for input and output
    ports:
      - "5044:5044"
    networks:
      - honeynet

  kibana:
    container_name: kibana_1
    image: docker.elastic.co/kibana/kibana:8.11.3
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200         #establish connection with ES for querying data 
    ports:
      - "5601:5601"
    networks:
      - honeynet

  filebeat:
    build: ./filebeat
    container_name: filebeat_1
    depends_on:
      - logstash
      - cowrie
    volumes:
      - cowrie-var:/cowrie-logs:ro
      - ./dionaea-logs:/dionaea-logs:ro
    user: root
    command: ["filebeat", "-e"]
    restart: unless-stopped
    networks:
      - honeynet    
    
volumes:
  cowrie-var:  
  esdata:  

networks:
  honeynet:
    driver: bridge  
 